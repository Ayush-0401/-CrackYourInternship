/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool issame(TreeNode * root1, TreeNode * root2)
    {
        if(!root1 && !root2)
        {
            return true;
        }
        if(!root1 || !root2)
        {
            return false;
        }
        if(root1 -> val != root2 -> val)
        {
            return false;
        }
        bool l = issame(root1-> left, root2 -> left);
        bool r = issame(root1 -> right, root2 -> right);
        return l & r;
    }
    bool isSubtree(TreeNode* root, TreeNode* subRoot) {
        if(root == NULL)
        {
            return false;
        }
        if(issame(root,subRoot))
        {
            return true;
        }
        bool l = isSubtree(root -> left,subRoot);
        bool r = isSubtree(root -> right,subRoot);
        return l|r;
    }
};