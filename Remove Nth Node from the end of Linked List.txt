/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int length(ListNode * head)
    {
        int c = 0;
        while(head != NULL)
        {
            c++;
            head = head -> next;
        }
        return c;
    }
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        int len = length(head);
        int t = len - n;
        if(head -> next == NULL)
        {
            return NULL;
        }
        if(len == n)
        {
            ListNode * t = head;
            head = head -> next;
            delete(t);
            return head;
        }
        ListNode * temp = head;
        while(t > 1)
        {
            temp = temp -> next;
            t--;
        }
        ListNode * d = temp -> next;
        temp -> next = temp -> next -> next;
        delete(d);
        return head;
    }
};