/* Node structure  used in the program

struct Node{
    int data;
    struct Node * next;
    struct Node * bottom;

    Node(int x){
        data = x;
        next = NULL;
        bottom = NULL;
    }

};
*/

class Solution {
  public:
    // Function which returns the  root of the flattened linked list.
    Node *flatten(Node *root) {
        Node * r = root;
        vector<int> ans;
        while(r != NULL)
        {
            Node * c = r;
            while(c != NULL)
            {
                ans.push_back(c -> data);
                c = c -> bottom;
            }
            r = r -> next;
        }
        sort(ans.begin(),ans.end());
        Node * newh = NULL;
        Node * t = NULL;
        for(int i = 0 ; i < ans.size() ; i++)
        {
            Node * p = new Node(ans[i]);
            if(newh == NULL)
            {
                newh = p;
                t = p;
            }
            else
            {
                t -> bottom = p;
                t = t -> bottom;
            }
        }
        return newh;
    }
};