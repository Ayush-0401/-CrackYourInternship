/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        if(list1 == NULL)
        {
            return list2;
        }
        if(list2 == NULL)
        {
            return list1;
        }
        ListNode * newh = new ListNode(-1);
        ListNode * nt = newh;
        while(list1 != NULL && list2 != NULL)
        {
            if(list1 -> val > list2 -> val)
            {
                ListNode * t = new ListNode(list2 -> val);
                nt -> next = t;
                nt = t;
                list2 = list2 -> next;
            }
            else
            {
                ListNode * t = new ListNode(list1 -> val);
                nt -> next = t;
                nt = t;
                list1 = list1 -> next;
            }
        }
        if(list1 != NULL)
        {
            nt -> next = list1;
        }
        else
        {
            nt -> next = list2;
        }
        return newh -> next;
    }
};