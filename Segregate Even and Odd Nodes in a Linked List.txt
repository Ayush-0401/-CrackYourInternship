/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        int i = 1;
        ListNode * odd = new ListNode(-1);
        ListNode * ot = odd;
        ListNode * even = new ListNode(-1);
        ListNode * et = even;
        while(head != NULL)
        {
            ListNode * temp = new ListNode(head -> val);
            if(i % 2 == 0)
            {
                et -> next = temp;
                et = temp;
            }
            else
            {
                ot -> next = temp;
                ot = temp;
            }
            i++;
            head = head -> next;
        }
        ot -> next = even -> next;
        return odd -> next;
    }
};