/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode * reverse(ListNode* head)
    {
        if(head == NULL || head -> next == NULL)
        {
            return head;
        }
        ListNode * newh = NULL;
        while(head != NULL)
        {
            ListNode * temp = new ListNode(head -> val);
            head = head -> next;
            temp -> next = newh;
            newh = temp;
        }
        return newh;
    }
    bool isPalindrome(ListNode* head) {
        ListNode * temp = reverse(head);
        while(head != NULL)
        {
            if(head -> val != temp -> val)
            {
                return false;
            }
            head = head -> next;
            temp = temp -> next;
        }
        return true;
    }
};