/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int carry = 0;
        ListNode * newh = new ListNode(0);
        ListNode * tail = newh;
        while(l1 != NULL || l2 != NULL || carry != 0)
        {
            int x = (l1 == NULL) ? 0 : l1 -> val;
            int y = (l2 == NULL) ? 0 : l2 -> val;
            int sum = x + y + carry;
            carry = sum / 10;
            int ans = sum % 10;
            ListNode * t = new ListNode(ans);
            tail -> next = t;
            tail = t;
            l1 = (l1 == NULL) ? NULL : l1 -> next;
            l2 = (l2 == NULL) ? NULL : l2 -> next;
        }
        return newh -> next;
    }
};